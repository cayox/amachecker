name: Build and Release Windows Executable

on:
  push:
    tags:
      - 'v*'  # This will trigger the workflow when you push a tag like v1.0


jobs:
  build:
    runs-on: windows-latest  # Specifies that the job should run on the latest Windows runner

    steps:
      - uses: actions/checkout@v2  # Checks out your repository under $GITHUB_WORKSPACE
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install


      - name: Build Executable
        run: poetry run pyinstaller amachecker.spec

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # This token is provided by Actions
        with:
          tag_name: ${{ github.ref }}
          release_name: AmaChecker Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Executable to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}  # This pulls from the CREATE RELEASE step above, grabs the upload_url.
          asset_path: ./dist/amachecker.exe  # Replace with the path to your built exe
          asset_name: amachecker.exe  # Replace with your exe name
          asset_content_type: application/octet-stream
